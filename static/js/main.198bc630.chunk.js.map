{"version":3,"sources":["images/Drawing_Logo_Project.svg","images/Drawing_Tech_Setup.svg","App/Tabs/VisionTab/VisionTab.jsx","App/Tabs/DetailsTab/DetailsTab.jsx","App/Tabs/ProgressTab/ProgressTab.jsx","App/Tabs/JobsTab/JobsTab.jsx","App/Page.jsx","Wrapper/Themer.jsx","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","tab","minWidth","contentContainer","marginTop","margin1","marginBottom","spacing","margin2","margin3","margin4","margin5","margin6","title","subtitle","paragraph","textAlign","pinkLink","color","palette","secondary","main","VisionTab","props","url","classes","text","Typography","variant","className","email","href","Fragment","src","DrawingTechSetup","alt","DetailsTab","ProgressTab","JobsTab","Page","tabContent","useState","setTab","ProjectImage","Paper","clsx","Tabs","value","onChange","event","indicatorColor","textColor","centered","Tab","label","Container","maxWidth","createMuiTheme","primary","transparent80","transparent60","transparent40","transparent20","transparent10","white","gray1","gray2","Themer","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.198bc630.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Drawing_Logo_Project.75d19f9b.svg\";","module.exports = __webpack_public_path__ + \"static/media/Drawing_Tech_Setup.e14d07d3.svg\";","import React, {useState} from 'react';\n\nimport {makeStyles} from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\n\n\nimport DrawingTechSetup from '../../../images/Drawing_Tech_Setup.svg';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    tab: {\n        minWidth: 125,\n    },\n    contentContainer: {\n        marginTop: 25,\n    },\n    margin1: {\n        marginBottom: theme.spacing(1),\n    },\n    margin2: {\n        marginBottom: theme.spacing(2),\n    },\n    margin3: {\n        marginBottom: theme.spacing(3),\n    },\n    margin4: {\n        marginBottom: theme.spacing(4),\n    },\n    margin5: {\n        marginBottom: theme.spacing(5),\n    },\n    margin6: {\n        marginBottom: theme.spacing(6),\n    },\n    title: {\n        marginBottom: theme.spacing(2),\n    },\n    subtitle: {\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(2),\n    },\n    paragraph: {\n        textAlign: \"justify\",\n        marginBottom: theme.spacing(2),\n    },\n    pinkLink: {\n        color: theme.palette.secondary.main\n    },\n\n}));\n\n\nexport const VisionTab = (props) => {\n\n    const classes = useStyles();\n\n    function subtitle(text) {\n        return (\n            <Typography variant=\"h5\" className={classes.subtitle}>\n                {text}\n            </Typography>\n        );\n    }\n\n    function paragraph(text) {\n        return (\n            <Typography variant=\"subtitle1\" className={classes.paragraph}>\n                {text}\n            </Typography>\n        );\n    }\n\n    function link(url) {\n        return (\n            <a href={url} className={classes.pinkLink}>\n                {url}\n            </a>\n        );\n    }\n\n    function email(email) {\n        return (\n            <a href={\"mailto:\" + email} className={classes.pinkLink}>\n                {email}\n            </a>\n        );\n    }\n\n\n    return (\n        <React.Fragment>\n            <Typography variant=\"h4\" className={classes.title}>Vision</Typography>\n\n            {subtitle(\n                <React.Fragment>\n                    What do we do?\n                </React.Fragment>\n            )}\n\n            {paragraph(\n                <React.Fragment>\n                    Tons of forums for local help are currently coming online/being developed. However,\n                    do these online-forums really reach the ones threaded the most by a COVID-19 infection?\n                </React.Fragment>\n            )}\n\n            {paragraph(\n                <React.Fragment>\n                    <strong>No!</strong> Many of these people do not use the internet.\n                    That is why we've built <strong>a hotline</strong> to close that gap.\n                </React.Fragment>\n            )}\n\n            <img src={DrawingTechSetup} alt=\"Tech Setup\" className={classes.margin2}/>\n\n\n            {subtitle(\n                <React.Fragment>\n                    Who is our service for?\n                </React.Fragment>\n            )}\n\n            {paragraph(\n                <React.Fragment>\n                    <strong>1. People in need:</strong> Either we already have volunteers in that area which are using\n                    our hotline or we can help these people find a local volunteer in that area on a forum like&nbsp;\n                    {link(\"https://www.helferlein.me/\")}.\n\n                    <br/><br/><br/>\n                </React.Fragment>\n            )}\n\n            {paragraph(\n                <React.Fragment>\n                    <strong>2. Volunteers:</strong> Either you can help locally or you can help them find a suitable\n                    volunteer on mentioned online forums. Sometimes the callers might just want to have a friendly\n                    conversation since they are even more isolated in these days.\n\n                    <br/><br/><br/>\n                </React.Fragment>\n            )}\n\n            {paragraph(\n                <React.Fragment>\n                    <strong>3. Communities that already offer a phone service:</strong> Your phone service is probably\n                    not operational 24/7. It does not have to be!\n\n                    <br/><br/>\n\n                    When becoming a part of our hotline you will still be able to get called directly. In addition to\n                    that, you can manually switch the call forward <em>on</em> or <em>off</em> anytime.\n\n                    <br/><br/>\n\n                    Whenever you are either in a call or <em>offline</em> (forwarding disabled) all the calls will still\n                    get answered by our system and stored in our database.\n\n                    <br/><br/>\n\n                    Whenever you'd like to fulfill one of the requests from the database you can click \"accept call\" and\n                    get assigned one of these requests with the associated phone number you are asked to call back.\n\n                    <br/><br/>\n\n                    You can easily set up an automatic <em>online</em>/<em>offline</em> schedule.\n\n                    <br/><br/>\n\n                    We'd love to hear from you! Contact us via {email(\"collab@helperline.io\")}.\n\n                    <br/><br/><br/>\n                </React.Fragment>\n            )}\n\n            {paragraph(\n                <React.Fragment>\n                    <strong>4. Online-Forums that want to include a (better) phone-API:</strong> We'd love to collaborate\n                    with as many other online forums as possible! There are multiple ways how we might collaborate:\n\n                    <br/><br/>\n\n                    a) Sharing of knowledge\n\n                    <br/><br/>\n\n                    b) Sharing of resources: We could make use of more volunteers! You could make use of more actual\n                    \"help-listings\" on your page!\n\n                    <br/><br/>\n\n                    c) Merging of features: You want to offer hotline functionality to your helpers as well? Great! We\n                    can talk about implementing the features from our \"calls\"-page inside your app using our API! That\n                    way you can offer our well thought-out hotline-system to your volunteer which don't even have to\n                    leave your app and don't have to sign up for yet another service!\n\n                    <br/><br/>\n\n                    Bigger network, stronger service! Contact us via {email(\"collab@helperline.io\")}.\n\n                </React.Fragment>\n            )}\n\n        </React.Fragment>\n    );\n};\n\n","import React, {useState} from 'react';\n\nimport {makeStyles} from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    tab: {\n        minWidth: 125,\n    },\n    contentContainer: {\n        marginTop: 25,\n    },\n    margin1: {\n        marginBottom: theme.spacing(1),\n    },\n    margin2: {\n        marginBottom: theme.spacing(2),\n    },\n    margin3: {\n        marginBottom: theme.spacing(3),\n    },\n    margin4: {\n        marginBottom: theme.spacing(4),\n    },\n    margin5: {\n        marginBottom: theme.spacing(5),\n    },\n    margin6: {\n        marginBottom: theme.spacing(6),\n    },\n    title: {\n        marginBottom: theme.spacing(2),\n    },\n    subtitle: {\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(2),\n    },\n    paragraph: {\n        textAlign: \"justify\",\n        marginBottom: theme.spacing(2),\n    },\n    pinkLink: {\n        color: theme.palette.secondary.main\n    },\n\n}));\n\n\nexport const DetailsTab = (props) => {\n\n    const classes = useStyles();\n\n    function subtitle(text) {\n        return (\n            <Typography variant=\"h5\" className={classes.subtitle}>\n                {text}\n            </Typography>\n        );\n    }\n\n    function paragraph(text) {\n        return (\n            <Typography variant=\"subtitle1\" className={classes.paragraph}>\n                {text}\n            </Typography>\n        );\n    }\n\n    function link(url) {\n        return (\n            <a href={url} className={classes.pinkLink}>\n                {url}\n            </a>\n        );\n    }\n\n    function email(email) {\n        return (\n            <a href={\"mailto:\" + email} className={classes.pinkLink}>\n                {email}\n            </a>\n        );\n    }\n\n\n    return (\n        <React.Fragment>\n            <Typography variant=\"h4\" className={classes.title}>Details</Typography>\n        </React.Fragment>\n    );\n};\n\n","import React, {useState} from 'react';\n\nimport {makeStyles} from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    tab: {\n        minWidth: 125,\n    },\n    contentContainer: {\n        marginTop: 25,\n    },\n    margin1: {\n        marginBottom: theme.spacing(1),\n    },\n    margin2: {\n        marginBottom: theme.spacing(2),\n    },\n    margin3: {\n        marginBottom: theme.spacing(3),\n    },\n    margin4: {\n        marginBottom: theme.spacing(4),\n    },\n    margin5: {\n        marginBottom: theme.spacing(5),\n    },\n    margin6: {\n        marginBottom: theme.spacing(6),\n    },\n    title: {\n        marginBottom: theme.spacing(2),\n    },\n    subtitle: {\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(2),\n    },\n    paragraph: {\n        textAlign: \"justify\",\n        marginBottom: theme.spacing(2),\n    },\n    pinkLink: {\n        color: theme.palette.secondary.main\n    },\n\n}));\n\n\nexport const ProgressTab = (props) => {\n\n    const classes = useStyles();\n\n    function subtitle(text) {\n        return (\n            <Typography variant=\"h5\" className={classes.subtitle}>\n                {text}\n            </Typography>\n        );\n    }\n\n    function paragraph(text) {\n        return (\n            <Typography variant=\"subtitle1\" className={classes.paragraph}>\n                {text}\n            </Typography>\n        );\n    }\n\n    function link(url) {\n        return (\n            <a href={url} className={classes.pinkLink}>\n                {url}\n            </a>\n        );\n    }\n\n    function email(email) {\n        return (\n            <a href={\"mailto:\" + email} className={classes.pinkLink}>\n                {email}\n            </a>\n        );\n    }\n\n\n    return (\n        <React.Fragment>\n            <Typography variant=\"h4\" className={classes.title}>Progress</Typography>\n        </React.Fragment>\n    );\n};\n\n","import React, {useState} from 'react';\n\nimport {makeStyles} from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    tab: {\n        minWidth: 125,\n    },\n    contentContainer: {\n        marginTop: 25,\n    },\n    margin1: {\n        marginBottom: theme.spacing(1),\n    },\n    margin2: {\n        marginBottom: theme.spacing(2),\n    },\n    margin3: {\n        marginBottom: theme.spacing(3),\n    },\n    margin4: {\n        marginBottom: theme.spacing(4),\n    },\n    margin5: {\n        marginBottom: theme.spacing(5),\n    },\n    margin6: {\n        marginBottom: theme.spacing(6),\n    },\n    title: {\n        marginBottom: theme.spacing(2),\n    },\n    subtitle: {\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(2),\n    },\n    paragraph: {\n        textAlign: \"justify\",\n        marginBottom: theme.spacing(2),\n    },\n    pinkLink: {\n        color: theme.palette.secondary.main\n    },\n\n}));\n\n\nexport const JobsTab = (props) => {\n\n    const classes = useStyles();\n\n    function subtitle(text) {\n        return (\n            <Typography variant=\"h5\" className={classes.subtitle}>\n                {text}\n            </Typography>\n        );\n    }\n\n    function paragraph(text) {\n        return (\n            <Typography variant=\"subtitle1\" className={classes.paragraph}>\n                {text}\n            </Typography>\n        );\n    }\n\n    function link(url) {\n        return (\n            <a href={url} className={classes.pinkLink}>\n                {url}\n            </a>\n        );\n    }\n\n    function email(email) {\n        return (\n            <a href={\"mailto:\" + email} className={classes.pinkLink}>\n                {email}\n            </a>\n        );\n    }\n\n\n    return (\n        <React.Fragment>\n            <Typography variant=\"h4\" className={classes.title}>Jobs</Typography>\n        </React.Fragment>\n    );\n};\n\n","import React, {useState} from 'react';\nimport ProjectImage from '../images/Drawing_Logo_Project.svg';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport clsx from 'clsx';\n\nimport './Page.scss';\nimport Container from \"@material-ui/core/Container\";\n\nimport {VisionTab} from './Tabs/VisionTab/VisionTab';\nimport {DetailsTab} from './Tabs/DetailsTab/DetailsTab';\nimport {ProgressTab} from './Tabs/ProgressTab/ProgressTab';\nimport {JobsTab} from './Tabs/JobsTab/JobsTab';\n\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n    tab: {\n        minWidth: 125,\n    },\n    contentContainer: {\n        marginTop: 25,\n    }\n});\n\n\nexport const Page = (props) => {\n\n    const classes = useStyles();\n\n    let [tab, setTab] = useState({tab: \"vision\"});\n\n    let tabContent;\n\n    switch (tab.tab) {\n        case \"vision\":\n            tabContent = <VisionTab/>;\n            break;\n        case \"details\":\n            tabContent = <DetailsTab/>;\n            break;\n        case \"progress\":\n            tabContent = <ProgressTab/>;\n            break;\n        case \"jobs\":\n            tabContent = <JobsTab/>;\n            break;\n        default:\n            tabContent = \"\";\n            break;\n    }\n\n    return (\n        <div>\n            <div className=\"BannerWindow\">\n                <img src={ProjectImage} alt=\"Project Logo\" className=\"Image\"/>\n                <Paper className={clsx(classes.root, \"TabPaper\")}>\n                    <Tabs\n                        value={tab.tab}\n                        onChange={(event, value) => setTab({tab: value})}\n                        indicatorColor=\"secondary\"\n                        textColor=\"secondary\"\n                        centered\n                        variant=\"scrollable\"\n                    >\n                        <Tab value=\"vision\" label=\"Vision\" className={classes.tab}/>\n                        <Tab value=\"details\" label=\"Details\" className={classes.tab}/>\n                        <Tab value=\"progress\" label=\"Progress\" className={classes.tab}/>\n                        <Tab value=\"jobs\" label=\"Jobs\" className={classes.tab}/>\n                    </Tabs>\n                </Paper>\n            </div>\n            <Container maxWidth=\"sm\" className=\"ContentContainer\">\n                <div className=\"ContentFlexBox\">\n                    {tabContent}\n                </div>\n            </Container>\n        </div>\n    );\n};\n\n","/* General Imports --------------------------------------------------------------- */\nimport React from 'react';\n\n\n/* Styling Imports --------------------------------------------------------------- */\nimport {createMuiTheme} from \"@material-ui/core/styles\";\nimport {ThemeProvider} from \"@material-ui/core/styles\";\nimport {BreakpointProvider} from 'react-socks';\nimport './Themer.scss';\n\n\n/* Component Imports ------------------------------------------------------------- */\nimport {Page} from '../App/Page';\n\n\n/* Theme ------------------------------------------------------------------------- */\n\n\nconst theme = createMuiTheme({\n\tpalette : {\n\t\tprimary: {\n\t\t\tmain: 'hsl(227, 25%, 18%)',\n\t\t\ttransparent80: 'hsla(227, 25%, 18%, 0.8)',\n\t\t\ttransparent60: 'hsla(227, 25%, 18%, 0.6)',\n\t\t\ttransparent40: 'hsla(227, 25%, 18%, 0.4)',\n\t\t\ttransparent20: 'hsla(227, 25%, 18%, 0.2)',\n\t\t\ttransparent10: 'hsla(227, 25%, 18%, 0.1)',\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: 'hsl(344, 93%, 50%)',\n\t\t\ttransparent80: 'hsla(344, 93%, 50%, 0.8)',\n\t\t\ttransparent60:  'hsla(344, 93%, 50%, 0.6)',\n\t\t\ttransparent40:  'hsla(344, 93%, 50%, 0.4)',\n\t\t\ttransparent20:  'hsla(344, 93%, 50%, 0.2)',\n\t\t\ttransparent10:  'hsla(344, 93%, 50%, 0.1)',\n\t\t},\n\t\twhite: {\n\t\t\tmain: 'rgb(255, 255, 255)',\n\t\t\ttransparent80: 'rgba(255, 255, 255, 0.8)',\n\t\t\ttransparent60: 'rgba(255, 255, 255, 0.6)',\n\t\t\ttransparent40: 'rgba(255, 255, 255, 0.4)',\n\t\t\ttransparent20: 'rgba(255, 255, 255, 0.2)',\n\t\t},\n\t\tgray1: 'hsl(0, 0%, 95%)',\n\t\tgray2: 'hsl(0, 0%, 90%)',\n\t}\n});\n\n\n/* Component --------------------------------------------------------------------- */\n\n\nexport const Themer = () => {\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<BreakpointProvider>\n\t\t\t\t<Page/>\n\t\t\t</BreakpointProvider>\n\t\t</ThemeProvider>\n\t);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Themer} from './Wrapper/Themer';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Themer/>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}